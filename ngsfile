#!/usr/bin/env ngs
ns(t=test) {

	sh = require("./lib/shell.ngs")

	F server() sh::server(false)
	F ui() sh::server(true)

	# Ex: DEBUG=guesser ngs . eval 'p' --dua 2,status
	# "eval" would conflict with the global eval(c:Client, ...)
	# which is called from tests below.
	F _eval(cmd:Str, dua:Str='') {
		F is_server_running() {
			# TODO: better error handling in sh::Client and upstream
			try {
				sh::Client()
				true
			} catch(e:(net::NetworkError)) {
				false
			}
		}
		if not(is_server_running()) {
			Thread("server", {
				sh::server(false)
			})
			retry(sleep=0.1, body=is_server_running)
		}
		sh::eval(cmd, dua.split(',').map(X.when(/^[0-9]+/, Int)))
	}
	_exports.eval = _eval

	F test() return sh::test()

}