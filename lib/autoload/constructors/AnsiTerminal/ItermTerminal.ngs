# iTerm2 detection is based on https://iterm2.com/utilities/it2check
F AnsiTerminal(fd_in:Int, fd_out:Int) {
	guard 'NGS_NO_ITERM' not in ENV
	saved_stty=`line: stty -g 0<${fd_in}`
	F read_dsr() {
		debug("file", "AnsiTerminal() read_dsr() reading 2 bytes spam")
		spam = fd_in.read(2)
		collector/'' {
			debug("file", "AnsiTerminal() read_dsr() reading till 'n'")
			while (byte = fd_in.read(1)) != 'n' {
				collect(byte)
			}
		}
	}
	$(stty -echo -icanon raw 0<${fd_in} 1>${fd_out})
	# TODO: read all available input on fd_in in order to prevent key presses
	#       from messing up read_dsr(). Issue #208.
	fd_out.write("\e[1337n") # iTerm2 proprietary code
	fd_out.write("\e[5n")    # report device status 
	version_string = read_dsr()
	if 'ITERM' in version_string {
		# The seen response was from DSR 1337. Discarding response to DSR 5.
		read_dsr()
	} else {
		# No response to DSR 1337. We are seeing response to DSR 5.
		version_string = null
	}
	$(stty $saved_stty 0<${fd_in} 1>${fd_out})
	guard version_string
	version_string.split(' ').apply(F(term, ver) {
		ItermTerminal(fd_in, fd_out).set('term', term).set('ver', ver)
	})
}
